#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <string.h>
#define SIZE 50
// Simple Shell Program
// Gina Sietz and Lauren Mills
// CIS 452
int main() {
    pid_t pid, child;
    int status;
    int i = 0;
    char command[SIZE];
    char* word[SIZE];
    printf("Enter a command:\n");
    fgets(command, SIZE, stdin);
    word[0] = strtok(command, " ,");
    while(word[i] != NULL) {
        i++;
        word[i] = strtok(NULL, " ");
    }
    printf("word1:%s\nword2:%s\nword3:%s\n", word[0], word[1], word[2]);
    if((pid = fork()) < 0) {
        perror("Fork failure\n");
        exit(1);
    }
    else if (pid == 0) {
        printf("Child process created\n");
        if (execvp(word[0], &word[0]) < 0) {
            perror("Execution failed");
            exit(1);
        }
    }
    else {
        child = wait(&status);
    }
    return 0;
    }
